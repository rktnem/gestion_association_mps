<div class="densite-besoin shadow dashboard-component">
    <div class="header">
        <h3>Besoin</h3>
        <select name="regionInNeed" id="regionInNeed">
            <option value="none">Region</option>
            {% for region in regions %}
                <option value={{ region.id }}>{{ region.nom }}</option>
            {% endfor %}
        </select>
    </div>
    <div class="chart-component">
        <div class="chart">
            <canvas id="chartOfNeeds"></canvas>
        </div>
    </div>
</div>

{# Charge the background color asset to alter the color for each "besoin" #}
<script src={{ asset("js/color.js") }}></script>
<script>
    const chartOfNeeds = document.getElementById("chartOfNeeds")
    const regionInNeed = document.getElementById("regionInNeed")
    let neededChart
    let config = {}

    function showNeeded(needs) {
        let name = []
        let total = []
        let bgColor = []
        let indexColor = 0

        if(neededChart) {
            neededChart.destroy()
        }

        for(need of needs) {
            name.push(need.besoin)
            total.push(need.total)
            bgColor.push(color[indexColor])

            indexColor++
        }

        const data = {
            labels: name,
            datasets: [{
                label: 'Besoin',
                data: total,
                backgroundColor: bgColor,
            }]
        };

        const config = {
            type: 'polarArea',
            data: data,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                onResize: (chart, size) => {
                    size.height = 300
                    chart.update()
                }
            }
        }

        return config
    }

    let needs = {{ besoins|json_encode|raw }}
    // Charge data on loading
    config = showNeeded(needs)

    neededChart = new Chart(chartOfNeeds, config)

    // Charge data when a region was selected
    regionInNeed.onchange = (event) => {
        let regionId = event.target.value
        fetch(`/api/besoin/${regionId}`)
        .then(res => {
            return res.json()
        })
        .then(needs => {
            config = showNeeded(needs)

            neededChart = new Chart(chartOfNeeds, config)
        })
    }

</script>