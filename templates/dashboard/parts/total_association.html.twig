<div class="total-association shadow p-4">
    <div class="header mb-4">
        <h3>Total</h3>
        <div class="bg-success px-4 py-2 rounded d-flex justify-content-center gap-2" id="localisation">
            <div id="regionName">Region</div>
            <div>/</div> 
            <div id="districtName">District</div>
        </div>
    </div>
    <p class="number mb-4" id="numberOfAssociation">{{ totalAssociation.total }} associations</p>
    <div class="search mb-3">
        <select name="region" id="region">
            <option value="none">Region</option>
            {% for region in regions %}
                <option value={{ region.id }}>{{ region.nom }}</option>
            {% endfor %}
        </select>
        <select name="district" id="district">
            <option value="none">District</option>
        </select>
    </div>
</div>

<script>
    const regionSelect = document.getElementById("region")
    const regionName = document.getElementById("regionName")
    const districtSelect = document.getElementById("district")
    const districtName = document.getElementById("districtName")
    const localisation = document.getElementById("localisation")
    const numberOfAssociation = document.getElementById("numberOfAssociation")

    // Generic function to get and put total association
    // either in region or in district
    function putTotalAssociation(url, htmlElement) {
        fetch(url)
        .then(res => {
            return res.json()
        })
        .then(res => {
            if (res[0].total === 0) {
                htmlElement.innerHTML = '0 association'
            }
            else {
                htmlElement.innerHTML = `${res[0].total} associations`
            }
        })
    }

    // When item on region select tag was selected
    regionSelect.onchange = (event) => {
        let regionId = event.target.value
        let urlToSelectDistrict = `/api/district/${regionId}`
        let urlToHaveTotalInRegion = `/api/total/region/${regionId}`
        let districtOption = "<option value='none'>District</option>"


        if(regionId === "none") {
            // Trunk the "district" select tag  
            districtSelect.replaceChildren()    
            
            districtSelect.innerHTML = districtOption

            regionName.innerHTML = "Region"
            districtName.innerHTML = "District"
        }
        else {
            // Add the region name to the regionName attribute
            regionName.innerHTML = event.target.selectedOptions[0].textContent
            // Initialize district name while region name change
            districtName.innerHTML = "District"

            // Get the total of association in one region
            putTotalAssociation(urlToHaveTotalInRegion, numberOfAssociation)

            // Set the relatives districts to selected region
            fetch(urlToSelectDistrict)
            .then(res => {
                return res.json()
            })
            .then(res => {
                // Trunk the "district" select tag  
                districtSelect.replaceChildren()

                for(response of res) {
                    districtOption += `<option value=${response.id}>${response.nom}</option>`
                }

                districtSelect.innerHTML = districtOption
            })
        }
    }

    // When item on district select tag was selected
    districtSelect.onchange = (event) => {
        let districtId = event.target.value
        let urlToHaveTotalInDistrict = `/api/total/district/${districtId}`

        if (districtId === "none") {
            // Write your code ...
            return 0
        }
        else {
            // Add the district name to the districtName attribute
            districtName.innerHTML = event.target.selectedOptions[0].textContent

            // Get the total of association in one district
            putTotalAssociation(urlToHaveTotalInDistrict, numberOfAssociation)
        }
    }
</script>